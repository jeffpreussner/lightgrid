/**
Grid layout for component content
<div class="grid">
    <div>content will scale to fit container evenly</div>
</div>

TODO: remove
  $bp-x-small-min: 400px;
  $bp-small-min: 680px;
  $bp-medium-min: 780px;
  $bp-large-min: 910px;
  $bp-x-large-min: $max-width;
**/
@import "./imports/_imports.scss";

.grid {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto;
  max-width: $max-width;
  margin: 0 auto;
  // grid-gap: $grid-col-gap $grid-row-gap;
  // margin-top:$grid-row-gap;
  
  &:first-child{margin-top: 0}
  @media (min-width: $bp-medium-min) {
    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
  }


  /** maintain grid on mobile **/
  &.grid--sm {
    grid-template-columns: repeat(auto-fit, minmax(80px, 50%));

    @media (min-width: $bp-medium-min) {
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    }
  }

  &.grid--flex-end {
    justify-content: flex-end;
  }

  &.grid--bleed{
    max-width: 100%;
  }
  &.grid--70-30{
      @media (min-width: $bp-medium-min) {
        grid-template-columns: 2fr 1fr;
      }
  }
  &.grid--30-70{
    @media (min-width: $bp-medium-min) {
      grid-template-columns: 1fr 2fr;
    }
  }
}
