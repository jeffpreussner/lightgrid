//Define 1em = ?px
$baseline: 16px;

// Remove the unit from a number
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

//Calculate an rem value from px
//If $px is an rem or em value, it will be returned as-is, with an rem unit.
//If $px is a px value, it will be converted to an rem.
@function rem($px) {
  @if (unit($px) == "rem") {
    @return $px;
  } @else if(unit($px) == "em") {
    //Assume an em value is an rem -- it's all we can do.
    @return strip-unit($px) + rem;
  } @else if(unit($px) != "%") {
    //Must be a px value
    @return strip-unit($px) / strip-unit($baseline) + rem;
  }
  @return null;
}

// Use rem units with px fallback
// Specify a px, em, or rem value with each property. Unitless values will be considered an rem.
@mixin rem($properties...) {
  @each $property in $properties {
    $value: nth($property, 2);
    @if (unit($value) == "px") {
      #{nth($property, 1)}: $value;
      #{nth($property, 1)}: rem($value);
    } @else {
      #{nth($property, 1)}: strip-unit($value) * $baseline;
      #{nth($property, 1)}: rem($value);
    }
  }
}
